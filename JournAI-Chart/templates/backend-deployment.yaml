apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  labels:
    {{- include "journai.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "journai.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        {{- include "journai.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      securityContext:
        fsGroup: 10001
        fsGroupChangePolicy: Always
      initContainers:
      - name: fix-permissions
        image: busybox:1.36
        command: ['sh', '-c', 'chmod -R 777 /app/uploads || true']
        securityContext:
          runAsUser: 0
          runAsNonRoot: false
          allowPrivilegeEscalation: true
        volumeMounts:
        - name: uploads
          mountPath: /app/uploads
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
        ports:
        - name: http
          containerPort: {{ .Values.backend.service.targetPort }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "journai.fullname" . }}-backend-config
        - secretRef:
            name: {{ .Values.secrets.existingSecretName | default "journai-secrets" }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
        volumeMounts:
        - name: uploads
          mountPath: {{ .Values.backend.persistence.mountPath }}
        - name: data
          mountPath: /app/data
          
      {{- if .Values.backend.metrics.enabled }}
      - name: metrics
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        command: ["npm", "run", "metrics"]
        securityContext:
          runAsUser: 10001
          runAsGroup: 10001
          runAsNonRoot: true
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop: ["ALL"]
        ports:
        - name: metrics
          containerPort: {{ .Values.backend.metrics.port }}
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ include "journai.fullname" . }}-backend-config
        - secretRef:
            name: {{ .Values.secrets.existingSecretName | default "journai-secrets" }}
        resources:
          {{- toYaml .Values.backend.resources | nindent 12 }}
      {{- end }}
      volumes:
      - name: uploads
        {{- if .Values.backend.persistence.enabled }}
        persistentVolumeClaim:
          claimName: {{ .Values.backend.persistence.existingClaim | default (printf "%s-uploads" (include "journai.fullname" .)) }}
        {{- else }}
        emptyDir: {}
        {{- end }}
      - name: data
        emptyDir: {}